{
  "compiled": {
    "contracts": {
      "test/contracts/no-pragma.sol": {
        "NoPragma": {
          "abi": [
            {
              "inputs": [],
              "name": "f",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "assembly": "    /* \"test/contracts/no-pragma.sol\":0:87  contract NoPragma {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/contracts/no-pragma.sol\":0:87  contract NoPragma {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26121ff0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/contracts/no-pragma.sol\":24:85  function f() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"test/contracts/no-pragma.sol\":67:77  msg.sender */\n      caller\n        /* \"test/contracts/no-pragma.sol\":54:78  selfdestruct(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa26469706673582212205e379e16ccc26c2d0ec93cb48245770e496b09e7cf0e9c938bb0a1684462a7b164736f6c634300060a0033\n}\n",
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b5060848061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806326121ff014602d575b600080fd5b60336035565b005b3373ffffffffffffffffffffffffffffffffffffffff16fffea26469706673582212205e379e16ccc26c2d0ec93cb48245770e496b09e7cf0e9c938bb0a1684462a7b164736f6c634300060a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x84 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CALLDATACOPY SWAP15 AND 0xCC 0xC2 PUSH13 0x2D0EC93CB48245770E496B09E7 0xCF 0xE SWAP13 SWAP4 DUP12 0xB0 LOG1 PUSH9 0x4462A7B164736F6C63 NUMBER STOP MOD EXP STOP CALLER ",
              "sourceMap": "0:87:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806326121ff014602d575b600080fd5b60336035565b005b3373ffffffffffffffffffffffffffffffffffffffff16fffea26469706673582212205e379e16ccc26c2d0ec93cb48245770e496b09e7cf0e9c938bb0a1684462a7b164736f6c634300060a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26121FF0 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CALLDATACOPY SWAP15 AND 0xCC 0xC2 PUSH13 0x2D0EC93CB48245770E496B09E7 0xCF 0xE SWAP13 SWAP4 DUP12 0xB0 LOG1 PUSH9 0x4462A7B164736F6C63 NUMBER STOP MOD EXP STOP CALLER ",
              "sourceMap": "0:87:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24:61;;;:::i;:::-;;;67:10;54:24;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "26400",
                "executionCost": "81",
                "totalCost": "26481"
              },
              "external": {
                "f()": "30121"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH",
                  "source": 0,
                  "value": "80"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH",
                  "source": 0,
                  "value": "40"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "MSTORE",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "CALLVALUE",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "ISZERO",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH [tag]",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "JUMPI",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "REVERT",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "tag",
                  "source": 0,
                  "value": "1"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "JUMPDEST",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "POP",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH #[$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "DUP1",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH [$]",
                  "source": 0,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "CODECOPY",
                  "source": 0
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "PUSH",
                  "source": 0,
                  "value": "0"
                },
                {
                  "begin": 0,
                  "end": 87,
                  "name": "RETURN",
                  "source": 0
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a26469706673582212205e379e16ccc26c2d0ec93cb48245770e496b09e7cf0e9c938bb0a1684462a7b164736f6c634300060a0033",
                  ".code": [
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "CALLVALUE",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "tag",
                      "source": 0,
                      "value": "1"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "CALLDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "LT",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "2"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "CALLDATALOAD",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "E0"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "SHR",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "26121FF0"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "tag",
                      "source": 0,
                      "value": "2"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 0,
                      "end": 87,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "tag",
                      "source": 0,
                      "value": "3"
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "5"
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "JUMP",
                      "source": 0,
                      "value": "[in]"
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "tag",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "STOP",
                      "source": 0
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "tag",
                      "source": 0,
                      "value": "5"
                    },
                    {
                      "begin": 24,
                      "end": 85,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 67,
                      "end": 77,
                      "name": "CALLER",
                      "source": 0
                    },
                    {
                      "begin": 54,
                      "end": 78,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 54,
                      "end": 78,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 54,
                      "end": 78,
                      "name": "SELFDESTRUCT",
                      "source": 0
                    }
                  ]
                }
              }
            },
            "methodIdentifiers": {
              "f()": "26121ff0"
            }
          },
          "ewasm": {
            "wasm": ""
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"f\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"test/contracts/no-pragma.sol\":\"NoPragma\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/contracts/no-pragma.sol\":{\"keccak256\":\"0x57cc5081c8486b6d605d19e32068ad3c068619322482297f40663bfae40cc795\",\"urls\":[\"bzz-raw://861cb6a5f9ee917a8c639525517335cef1e0414ffda1c0c9f15db44a5845be8f\",\"dweb:/ipfs/QmVNohsu9qggYqiFpLnzZuRqBNitqBDYdE1CVEZYNTH9iF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "test/contracts/no-pragma.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "test/contracts/no-pragma.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "3420",
        "formattedMessage": "test/contracts/no-pragma.sol: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.10;\"\n",
        "message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.10;\"",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "test/contracts/no-pragma.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "test/contracts/no-pragma.sol": {
        "ast": {
          "absolutePath": "test/contracts/no-pragma.sol",
          "exportedSymbols": {
            "NoPragma": [
              10
            ]
          },
          "id": 11,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 10,
              "linearizedBaseContracts": [
                10
              ],
              "name": "NoPragma",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 8,
                    "nodeType": "Block",
                    "src": "44:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "67:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "67:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3,
                            "name": "selfdestruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -21,
                            "src": "54:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable)"
                            }
                          },
                          "id": 6,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "54:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7,
                        "nodeType": "ExpressionStatement",
                        "src": "54:24:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "26121ff0",
                  "id": 9,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "f",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "34:2:0"
                  },
                  "returnParameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "44:0:0"
                  },
                  "scope": 10,
                  "src": "24:61:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 11,
              "src": "0:87:0"
            }
          ],
          "src": "0:89:0"
        },
        "id": 0
      }
    }
  },
  "importedFiles": [
    "test/contracts/no-pragma.sol"
  ]
}